50.
// toString() METHOD WITHOUT OVERRIDING:
	
package assignment7;
class Employee{
	int empid;
	String name;
	public Employee(int empid, String name){
			super();
			this.empid = empid;
			this.name = name;
		}
	}
	public class Question50{
		public static void main(String[] args){
			Employee e=new Employee(123, "Niket");
			System.out.println(e);						
			}
		}

//toString() METHOD WITH OVERRIDING:
		
package assignment7;
	class Employee1{
		int empid;
		String name;
	public Employee1(int empid, String name) {
			super();
			this.empid = empid;
			this.name = name;
		}
	@Override
	public String toString(){
			return "Employee [empid=" + empid + ", name=" + name + "]";
		}
			
			
		}
	public class Question50{
		public static void main(String[] args){
			Employee1 e=new Employee1(12, "Niket");
			System.out.println(e);		 
		}
	}

// equals() METHOD WITHOUT OVERRIDING:
	
package assignment7;
class Person{
	int pid;
	String name;
	public Person(int pid, String name){
			super();
			this.pid = pid;
			this.name = name;
		}
	}
	public class Question50{
		public static void main(String[] args) {
			Person p1=new Person(22, "Niket");
			Person p2=new Person(11, "niket1");
			Person p3=p2;
			System.out.println("p1 and p2 has Equal reference? =>"+p1.equals(p2)); 
			System.out.println("p1 and p3 has Equal reference? =>"+p2.equals(p3)); 
		}
	}


// equals() METHOD OVERRIDING:
	
package assignment7;
class Person1{
	int pid;
	String name;
	public Person1(int pid, String name){
			super();
			this.pid = pid;
			this.name = name;
		}
	public boolean equals (Object obj){
			Person1 p=(Person1)obj;
			if(this.pid==p.pid && this.name==p.name){
				return true;
			}
			return false;
		}
	}
	public class Question50{
		public static void main(String[] args) {
			Person1 p1=new Person1(1, "Niket");
			Person1 p2=new Person1(2, "Niket1");
			Person1 p3=new Person1(36,"Niket2");
			Person1 p4=p2;
			System.out.println("p1 and p2 has Equal content? =>"+p1.equals(p2));  
			System.out.println("p1 and p3 has Equal content? =>"+p1.equals(p3)); 
			System.out.println("p4 and p2 has Equal content? =>"+p2.equals(p4)); 
		}
	}
51.
package assignment7;
import java.util.*;
class Employee2{
	int empid;
	String name;
	float salary;
	void input(int empid, String name, float salary) {
		this.empid = empid;
		this.name = name;
		this.salary = salary;
	}
	public boolean equals(Object obj){
		Employee2 E=(Employee2)obj;
		return this.empid==E.empid;
	}
	@Override
	public String toString(){
		return "Employee2 [empid=" + empid + ", name=" + name + ", salary=" + salary + "]";
	}
		
}
public class Question51{
	public static void main(String[] args){
			
		Scanner sc=new Scanner(System.in);
			
		Employee2 e1=new Employee2();
		Employee2 e2=new Employee2();
		Employee2 e3=new Employee2();
		Employee2 e4=new Employee2();
		Employee2 e5=new Employee2();
		
		Employee2 e[]= {e1,e2,e3,e4,e5};
		for(int i=0;i<5;i++){
			System.out.println("Enter empid, name and salary:");
			int empid=sc.nextInt();
			String name=sc.next();
			float salary=sc.nextFloat();
			if(i==0){
				e[i].input(empid, name, salary);
				}
				else{
				e[i].input(empid, name, salary);
				
					if(e[i-1].equals(e[i])){
						System.out.println("This person already exists, Enter again!");
						i=i-1;
					}
			}
	}
		for(Employee2 emp:e){
			System.out.println(emp);
		}
	}
}